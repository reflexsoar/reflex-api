Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LPAREN
    RPAREN

Grammar

Rule 0     S' -> expression
Rule 1     expression -> target
Rule 2     expression -> expression OR expression
Rule 3     expression -> expression AND expression
Rule 4     expression -> target EQUALS STRING
Rule 5     expression -> target CONTAINS STRING
Rule 6     expression -> target IN ARRAY
Rule 7     expression -> target GT NUMBER
Rule 8     expression -> target GT FLOAT
Rule 9     expression -> target GTE NUMBER
Rule 10    expression -> target GTE FLOAT
Rule 11    expression -> target LT NUMBER
Rule 12    expression -> target LT FLOAT
Rule 13    expression -> target LTE NUMBER
Rule 14    expression -> target LTE FLOAT
Rule 15    expression -> target CIDR STRING
Rule 16    expression -> target EXISTS
Rule 17    expression -> target REGEXP STRING
Rule 18    expression -> target IS BOOL
Rule 19    expression -> target BETWEEN STRING

Terminals, with rules where they appear

AND                  : 3
ARRAY                : 6
BETWEEN              : 19
BOOL                 : 18
CIDR                 : 15
CONTAINS             : 5
EQUALS               : 4
EXISTS               : 16
FLOAT                : 8 10 12 14
GT                   : 7 8
GTE                  : 9 10
IN                   : 6
IS                   : 18
LPAREN               : 
LT                   : 11 12
LTE                  : 13 14
NUMBER               : 7 9 11 13
OR                   : 2
REGEXP               : 17
RPAREN               : 
STRING               : 4 5 15 17 19
error                : 
target               : 1 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19

Nonterminals, with rules where they appear

expression           : 2 2 3 3 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . target
    (2) expression -> . expression OR expression
    (3) expression -> . expression AND expression
    (4) expression -> . target EQUALS STRING
    (5) expression -> . target CONTAINS STRING
    (6) expression -> . target IN ARRAY
    (7) expression -> . target GT NUMBER
    (8) expression -> . target GT FLOAT
    (9) expression -> . target GTE NUMBER
    (10) expression -> . target GTE FLOAT
    (11) expression -> . target LT NUMBER
    (12) expression -> . target LT FLOAT
    (13) expression -> . target LTE NUMBER
    (14) expression -> . target LTE FLOAT
    (15) expression -> . target CIDR STRING
    (16) expression -> . target EXISTS
    (17) expression -> . target REGEXP STRING
    (18) expression -> . target IS BOOL
    (19) expression -> . target BETWEEN STRING

    target          shift and go to state 2

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (2) expression -> expression . OR expression
    (3) expression -> expression . AND expression

    OR              shift and go to state 3
    AND             shift and go to state 4


state 2

    (1) expression -> target .
    (4) expression -> target . EQUALS STRING
    (5) expression -> target . CONTAINS STRING
    (6) expression -> target . IN ARRAY
    (7) expression -> target . GT NUMBER
    (8) expression -> target . GT FLOAT
    (9) expression -> target . GTE NUMBER
    (10) expression -> target . GTE FLOAT
    (11) expression -> target . LT NUMBER
    (12) expression -> target . LT FLOAT
    (13) expression -> target . LTE NUMBER
    (14) expression -> target . LTE FLOAT
    (15) expression -> target . CIDR STRING
    (16) expression -> target . EXISTS
    (17) expression -> target . REGEXP STRING
    (18) expression -> target . IS BOOL
    (19) expression -> target . BETWEEN STRING

    OR              reduce using rule 1 (expression -> target .)
    AND             reduce using rule 1 (expression -> target .)
    $end            reduce using rule 1 (expression -> target .)
    EQUALS          shift and go to state 5
    CONTAINS        shift and go to state 6
    IN              shift and go to state 7
    GT              shift and go to state 8
    GTE             shift and go to state 9
    LT              shift and go to state 10
    LTE             shift and go to state 11
    CIDR            shift and go to state 12
    EXISTS          shift and go to state 13
    REGEXP          shift and go to state 14
    IS              shift and go to state 15
    BETWEEN         shift and go to state 16


state 3

    (2) expression -> expression OR . expression
    (1) expression -> . target
    (2) expression -> . expression OR expression
    (3) expression -> . expression AND expression
    (4) expression -> . target EQUALS STRING
    (5) expression -> . target CONTAINS STRING
    (6) expression -> . target IN ARRAY
    (7) expression -> . target GT NUMBER
    (8) expression -> . target GT FLOAT
    (9) expression -> . target GTE NUMBER
    (10) expression -> . target GTE FLOAT
    (11) expression -> . target LT NUMBER
    (12) expression -> . target LT FLOAT
    (13) expression -> . target LTE NUMBER
    (14) expression -> . target LTE FLOAT
    (15) expression -> . target CIDR STRING
    (16) expression -> . target EXISTS
    (17) expression -> . target REGEXP STRING
    (18) expression -> . target IS BOOL
    (19) expression -> . target BETWEEN STRING

    target          shift and go to state 2

    expression                     shift and go to state 17

state 4

    (3) expression -> expression AND . expression
    (1) expression -> . target
    (2) expression -> . expression OR expression
    (3) expression -> . expression AND expression
    (4) expression -> . target EQUALS STRING
    (5) expression -> . target CONTAINS STRING
    (6) expression -> . target IN ARRAY
    (7) expression -> . target GT NUMBER
    (8) expression -> . target GT FLOAT
    (9) expression -> . target GTE NUMBER
    (10) expression -> . target GTE FLOAT
    (11) expression -> . target LT NUMBER
    (12) expression -> . target LT FLOAT
    (13) expression -> . target LTE NUMBER
    (14) expression -> . target LTE FLOAT
    (15) expression -> . target CIDR STRING
    (16) expression -> . target EXISTS
    (17) expression -> . target REGEXP STRING
    (18) expression -> . target IS BOOL
    (19) expression -> . target BETWEEN STRING

    target          shift and go to state 2

    expression                     shift and go to state 18

state 5

    (4) expression -> target EQUALS . STRING

    STRING          shift and go to state 19


state 6

    (5) expression -> target CONTAINS . STRING

    STRING          shift and go to state 20


state 7

    (6) expression -> target IN . ARRAY

    ARRAY           shift and go to state 21


state 8

    (7) expression -> target GT . NUMBER
    (8) expression -> target GT . FLOAT

    NUMBER          shift and go to state 22
    FLOAT           shift and go to state 23


state 9

    (9) expression -> target GTE . NUMBER
    (10) expression -> target GTE . FLOAT

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25


state 10

    (11) expression -> target LT . NUMBER
    (12) expression -> target LT . FLOAT

    NUMBER          shift and go to state 26
    FLOAT           shift and go to state 27


state 11

    (13) expression -> target LTE . NUMBER
    (14) expression -> target LTE . FLOAT

    NUMBER          shift and go to state 28
    FLOAT           shift and go to state 29


state 12

    (15) expression -> target CIDR . STRING

    STRING          shift and go to state 30


state 13

    (16) expression -> target EXISTS .

    OR              reduce using rule 16 (expression -> target EXISTS .)
    AND             reduce using rule 16 (expression -> target EXISTS .)
    $end            reduce using rule 16 (expression -> target EXISTS .)


state 14

    (17) expression -> target REGEXP . STRING

    STRING          shift and go to state 31


state 15

    (18) expression -> target IS . BOOL

    BOOL            shift and go to state 32


state 16

    (19) expression -> target BETWEEN . STRING

    STRING          shift and go to state 33


state 17

    (2) expression -> expression OR expression .
    (2) expression -> expression . OR expression
    (3) expression -> expression . AND expression

    OR              reduce using rule 2 (expression -> expression OR expression .)
    $end            reduce using rule 2 (expression -> expression OR expression .)
    AND             shift and go to state 4

  ! AND             [ reduce using rule 2 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 3 ]


state 18

    (3) expression -> expression AND expression .
    (2) expression -> expression . OR expression
    (3) expression -> expression . AND expression

    OR              reduce using rule 3 (expression -> expression AND expression .)
    AND             reduce using rule 3 (expression -> expression AND expression .)
    $end            reduce using rule 3 (expression -> expression AND expression .)

  ! OR              [ shift and go to state 3 ]
  ! AND             [ shift and go to state 4 ]


state 19

    (4) expression -> target EQUALS STRING .

    OR              reduce using rule 4 (expression -> target EQUALS STRING .)
    AND             reduce using rule 4 (expression -> target EQUALS STRING .)
    $end            reduce using rule 4 (expression -> target EQUALS STRING .)


state 20

    (5) expression -> target CONTAINS STRING .

    OR              reduce using rule 5 (expression -> target CONTAINS STRING .)
    AND             reduce using rule 5 (expression -> target CONTAINS STRING .)
    $end            reduce using rule 5 (expression -> target CONTAINS STRING .)


state 21

    (6) expression -> target IN ARRAY .

    OR              reduce using rule 6 (expression -> target IN ARRAY .)
    AND             reduce using rule 6 (expression -> target IN ARRAY .)
    $end            reduce using rule 6 (expression -> target IN ARRAY .)


state 22

    (7) expression -> target GT NUMBER .

    OR              reduce using rule 7 (expression -> target GT NUMBER .)
    AND             reduce using rule 7 (expression -> target GT NUMBER .)
    $end            reduce using rule 7 (expression -> target GT NUMBER .)


state 23

    (8) expression -> target GT FLOAT .

    OR              reduce using rule 8 (expression -> target GT FLOAT .)
    AND             reduce using rule 8 (expression -> target GT FLOAT .)
    $end            reduce using rule 8 (expression -> target GT FLOAT .)


state 24

    (9) expression -> target GTE NUMBER .

    OR              reduce using rule 9 (expression -> target GTE NUMBER .)
    AND             reduce using rule 9 (expression -> target GTE NUMBER .)
    $end            reduce using rule 9 (expression -> target GTE NUMBER .)


state 25

    (10) expression -> target GTE FLOAT .

    OR              reduce using rule 10 (expression -> target GTE FLOAT .)
    AND             reduce using rule 10 (expression -> target GTE FLOAT .)
    $end            reduce using rule 10 (expression -> target GTE FLOAT .)


state 26

    (11) expression -> target LT NUMBER .

    OR              reduce using rule 11 (expression -> target LT NUMBER .)
    AND             reduce using rule 11 (expression -> target LT NUMBER .)
    $end            reduce using rule 11 (expression -> target LT NUMBER .)


state 27

    (12) expression -> target LT FLOAT .

    OR              reduce using rule 12 (expression -> target LT FLOAT .)
    AND             reduce using rule 12 (expression -> target LT FLOAT .)
    $end            reduce using rule 12 (expression -> target LT FLOAT .)


state 28

    (13) expression -> target LTE NUMBER .

    OR              reduce using rule 13 (expression -> target LTE NUMBER .)
    AND             reduce using rule 13 (expression -> target LTE NUMBER .)
    $end            reduce using rule 13 (expression -> target LTE NUMBER .)


state 29

    (14) expression -> target LTE FLOAT .

    OR              reduce using rule 14 (expression -> target LTE FLOAT .)
    AND             reduce using rule 14 (expression -> target LTE FLOAT .)
    $end            reduce using rule 14 (expression -> target LTE FLOAT .)


state 30

    (15) expression -> target CIDR STRING .

    OR              reduce using rule 15 (expression -> target CIDR STRING .)
    AND             reduce using rule 15 (expression -> target CIDR STRING .)
    $end            reduce using rule 15 (expression -> target CIDR STRING .)


state 31

    (17) expression -> target REGEXP STRING .

    OR              reduce using rule 17 (expression -> target REGEXP STRING .)
    AND             reduce using rule 17 (expression -> target REGEXP STRING .)
    $end            reduce using rule 17 (expression -> target REGEXP STRING .)


state 32

    (18) expression -> target IS BOOL .

    OR              reduce using rule 18 (expression -> target IS BOOL .)
    AND             reduce using rule 18 (expression -> target IS BOOL .)
    $end            reduce using rule 18 (expression -> target IS BOOL .)


state 33

    (19) expression -> target BETWEEN STRING .

    OR              reduce using rule 19 (expression -> target BETWEEN STRING .)
    AND             reduce using rule 19 (expression -> target BETWEEN STRING .)
    $end            reduce using rule 19 (expression -> target BETWEEN STRING .)

