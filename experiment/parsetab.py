
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDnonassocEQUALSnonassocINnonassocCONTAINSAND ARRAY BETWEEN BOOL CIDR CONTAINS EQUALS EXISTS FLOAT GT GTE IN IS LPAREN LT LTE NUMBER OR REGEXP RPAREN STRING targetexpression : targetexpression : expression OR expressionexpression : expression AND expressionexpression : target EQUALS STRINGexpression : target CONTAINS STRINGexpression : target IN ARRAYexpression : target GT NUMBER \n                   | target GT FLOAT\n        expression : target GTE NUMBER \n                   | target GTE FLOAT\n        expression : target LT NUMBER \n                   | target LT FLOAT\n        expression : target LTE NUMBER \n                   | target LTE FLOAT\n        expression : target CIDR STRINGexpression : target EXISTSexpression : target REGEXP STRINGexpression : target IS BOOLexpression : target BETWEEN STRING'
    
_lr_action_items = {'target':([0,3,4,],[2,2,2,]),'$end':([1,2,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,],[0,-1,-16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-19,]),'OR':([1,2,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,],[3,-1,-16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-19,]),'AND':([1,2,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,],[4,-1,-16,4,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-17,-18,-19,]),'EQUALS':([2,],[5,]),'CONTAINS':([2,],[6,]),'IN':([2,],[7,]),'GT':([2,],[8,]),'GTE':([2,],[9,]),'LT':([2,],[10,]),'LTE':([2,],[11,]),'CIDR':([2,],[12,]),'EXISTS':([2,],[13,]),'REGEXP':([2,],[14,]),'IS':([2,],[15,]),'BETWEEN':([2,],[16,]),'STRING':([5,6,12,14,16,],[19,20,30,31,33,]),'ARRAY':([7,],[21,]),'NUMBER':([8,9,10,11,],[22,24,26,28,]),'FLOAT':([8,9,10,11,],[23,25,27,29,]),'BOOL':([15,],[32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,4,],[1,17,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> target','expression',1,'p_expression','rql_experiment2.py',195),
  ('expression -> expression OR expression','expression',3,'p_expression_or','rql_experiment2.py',199),
  ('expression -> expression AND expression','expression',3,'p_expression_and','rql_experiment2.py',203),
  ('expression -> target EQUALS STRING','expression',3,'p_expression_match','rql_experiment2.py',207),
  ('expression -> target CONTAINS STRING','expression',3,'p_expression_contains','rql_experiment2.py',211),
  ('expression -> target IN ARRAY','expression',3,'p_expression_in','rql_experiment2.py',215),
  ('expression -> target GT NUMBER','expression',3,'p_expression_greater_than','rql_experiment2.py',219),
  ('expression -> target GT FLOAT','expression',3,'p_expression_greater_than','rql_experiment2.py',220),
  ('expression -> target GTE NUMBER','expression',3,'p_expression_greater_than_or_equal','rql_experiment2.py',225),
  ('expression -> target GTE FLOAT','expression',3,'p_expression_greater_than_or_equal','rql_experiment2.py',226),
  ('expression -> target LT NUMBER','expression',3,'p_expression_less_than','rql_experiment2.py',231),
  ('expression -> target LT FLOAT','expression',3,'p_expression_less_than','rql_experiment2.py',232),
  ('expression -> target LTE NUMBER','expression',3,'p_expression_less_than_or_equal','rql_experiment2.py',237),
  ('expression -> target LTE FLOAT','expression',3,'p_expression_less_than_or_equal','rql_experiment2.py',238),
  ('expression -> target CIDR STRING','expression',3,'p_expression_in_cidr','rql_experiment2.py',243),
  ('expression -> target EXISTS','expression',2,'p_expression_exists','rql_experiment2.py',247),
  ('expression -> target REGEXP STRING','expression',3,'p_expression_regexp','rql_experiment2.py',251),
  ('expression -> target IS BOOL','expression',3,'p_expression_is','rql_experiment2.py',255),
  ('expression -> target BETWEEN STRING','expression',3,'p_expression_between','rql_experiment2.py',259),
]
